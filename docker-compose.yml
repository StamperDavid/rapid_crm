services:
  # Frontend (React + Nginx)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - rapid-crm-network
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  # Backend (Express + SQLite)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3001:3001"
    volumes:
      - ./instance:/app/instance
      - ./src/database:/app/src/database
      - ./PycharmProjects/rapid_eld:/app/rapid_eld
    networks:
      - rapid-crm-network
    environment:
      - NODE_ENV=production
      - PORT=3001
      # ELD Service Integration
      - ELD_AUTOMATION_ENABLED=true
      - ELD_COMPLIANCE_MONITORING=true
      - IFTA_QUARTERLY_AUTOMATION=true
      - AI_AGENT_INTEGRATION=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database (SQLite with persistent volume)
  database:
    image: alpine:latest
    volumes:
      - rapid-crm-db:/app/data
      - ./instance:/app/instance
    networks:
      - rapid-crm-network
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        mkdir -p /app/data &&
        if [ ! -f /app/data/rapid_crm.db ]; then
          sqlite3 /app/data/rapid_crm.db 'CREATE TABLE IF NOT EXISTS companies (id INTEGER PRIMARY KEY);'
        fi &&
        tail -f /dev/null
      "
    restart: unless-stopped

networks:
  rapid-crm-network:
    driver: bridge

volumes:
  rapid-crm-db:
    driver: local
